[tox]
min_version = 4
env_list =
    pre-commit,
    mypy-{pkg,api},
    py3{7,8,9,10,11,12}
    py311-bindings-main,
    pypy3,
    system-argon2,
    docs,
    coverage-report


[testenv]
description = Run tests and do NOT measure coverage.
package = wheel
wheel_build_env = .pkg
extras = tests
commands =
    pytest {posargs}
    python -Im argon2 -n 1 -t 1 -m 8 -p 1


[testenv:py3{7,11}]
description = Run tests and measure coverage.
deps = coverage[toml]
commands =
    coverage run -m pytest {posargs}
    coverage run -m argon2 -n 1 -t 1 -m 8 -p 1
    coverage run -m argon2 --profile CHEAPEST


[testenv:coverage-report]
description = Report coverage over all test runs.
skip_install = true
depends = py3{7,11}
deps = coverage[toml]
parallel_show_output = true
commands =
    coverage combine
    coverage report


[testenv:system-argon2]
description = Run tests against bindings that use a system installation of Argon2.
set_env = ARGON2_CFFI_USE_SYSTEM=1
install_command =
    pip install {opts} --no-binary=argon2-cffi-bindings {packages}
commands =
    pytest {posargs}
    python -Im argon2 -n 1 -t 1 -m 8 -p 1


[testenv:py311-bindings-main]
description = Run tests against the current main branch of argon2-cffi-bindings
install_command = pip install {opts} --no-deps {packages}
extras =
commands =
    pip install -I hypothesis pytest git+https://github.com/hynek/argon2-cffi-bindings
    pytest {posargs}
    python -Im argon2 -n 1 -t 1 -m 8 -p 1


[testenv:docs]
description = Build docs and run doctests.
# Keep base_python in-sync with .readthedocs.yaml and ci.yml/docs.
base_python = python3.11
extras = docs
commands =
    python -Im doctest README.md
    sphinx-build -W -b html -d {envtmpdir}/doctrees docs docs/_build/html
    sphinx-build -W -b doctest -d {envtmpdir}/doctrees docs docs/_build/html


[testenv:pre-commit]
description = Run all pre-commit hooks.
skip_install = true
deps = pre-commit
commands = pre-commit run --all-files


[testenv:mypy-pkg]
description = Check own code.
deps = mypy
commands = mypy src


[testenv:mypy-api]
description = Check only API types.
deps = mypy
commands = mypy tests/typing
