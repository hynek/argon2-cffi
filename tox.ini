[tox]
envlist = pre-commit,lint,py27,py34,py35,py36,py37,pypy,pypy3,system-argon2,docs,manifest,readme,coverage-report


[testenv:pre-commit]
skip_install = true
basepython = python3.6
deps = pre-commit
passenv = HOMEPATH  # needed on Windows
commands = pre-commit run --all-files --verbose


[testenv]
extras = tests
commands =
    coverage run --parallel -m pytest {posargs}
    coverage run --parallel -m argon2 -n 1 -t 1 -m 8 -p 1


[testenv:system-argon2]
description = Run tests against bindings that use a system installation of Argon2.
basepython = python3.6
setenv = ARGON2_CFFI_USE_SYSTEM=1
extras = tests
install_command = pip install {opts} --no-binary=argon2_cffi {packages}
commands =
    python -m pytest {posargs}
    python -m argon2 -n 1 -t 1 -m 8 -p 1


[testenv:docs]
basepython = python3.6
extras = docs
commands =
    python -m doctest README.rst
    sphinx-build -W -b html -d {envtmpdir}/doctrees docs docs/_build/html
    sphinx-build -W -b doctest -d {envtmpdir}/doctrees docs docs/_build/html


[testenv:lint]
skip_install = true
basepython = python3.6
deps =
    flake8
    flake8-isort
    black
commands =
    flake8 src tests setup.py docs/conf.py
    black --check setup.py src tests docs/conf.py


[testenv:manifest]
description = Ensure MANIFEST.in is up to date.
basepython = python3.6
deps = check-manifest
skip_install = true
commands = check-manifest


[testenv:readme]
description = Ensure README.rst renders on PyPI.
basepython = python3.6
deps = readme_renderer
skip_install = true
commands = python setup.py check -r -s


[testenv:coverage-report]
basepython = python3.6
deps = coverage
skip_install = true
commands =
    coverage combine
    coverage report
