name: wheels
on:
  workflow_dispatch:
    inputs:
      version:
        description: PyPI version (sdist already uploaded)
        required: true

jobs:
  manylinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - name: cp27-cp27mu
          image: quay.io/pypa/manylinux1_x86_64
        - name: cp27-cp27m
          image: quay.io/pypa/manylinux1_x86_64
        - name: cp35-cp35m
          image: quay.io/pypa/manylinux1_x86_64
        - name: pp27-pypy_73
          image: pypywheels/manylinux2010-pypy_x86_64
        - name: pp36-pypy36_pp73
          image: pypywheels/manylinux2010-pypy_x86_64
        - name: pp37-pypy37_pp73
          image: pypywheels/manylinux2010-pypy_x86_64
    steps:
    - run: |
        mkdir dist
        podman run --rm \
          -v $PWD/dist:/dist:rw \
          ${{ matrix.image }} \
          bash -exc '\
            yum install -y libffi-devel && \
            /opt/python/${{ matrix.name }}/bin/pip wheel \
              --no-deps --wheel-dir /tmp/wheels --no-binary :all: \
              argon2-cffi==${{ github.event.inputs.version }} && \
            auditwheel repair /tmp/wheels/* --wheel-dir /dist && \
            find /dist -type f | xargs --verbose --replace unzip -l {} \
          '
      name: build wheel
    - uses: actions/upload-artifact@v2
      with:
        name: wheels-manylinux-${{ matrix.name }}
        path: dist/*.whl
  aarch64_manylinux:
    strategy:
      matrix:
        pyver: [cp36-cp36m, cp37-cp37m, cp38-cp38, cp39-cp39]
        arch: [aarch64]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      py: /opt/python/${{ matrix.pyver }}/bin/python
      img: quay.io/pypa/manylinux2014_${{ matrix.arch }}
    steps:
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Available platforms
      run: echo ${{ steps.qemu.outputs.platforms }}
    - name: mkdir dist
      run: |
        podman run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
         ${{ env.img }} mkdir dist
    - name: Build wheel
      run: |
        podman run --rm -v $PWD/dist:/dist:rw --workdir=/ws \
          ${{ env.img }} \
          bash -exc '\
            yum install -y libffi-devel && \
            /opt/python/${{ matrix.pyver }}/bin/pip wheel \
              --no-deps --wheel-dir /tmp/wheels --no-binary :all: \
              argon2-cffi==${{ github.event.inputs.version }} && \
            auditwheel repair /tmp/wheels/* --wheel-dir /dist && \
            find /dist -type f | xargs --verbose --replace unzip -l {} \
          '
    - uses: actions/upload-artifact@v2
      with:
        name: wheels-aarch64_manylinux-${{ matrix.pyver }}
        path: dist/*.whl
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        include:
        - name: cp27
          py: "2.7"
        - name: cp35
          py: "3.5"
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.py }}
    - run: python -m pip install --upgrade pip setuptools wheel
    - run: 'python -m pip wheel --no-deps --wheel-dir dist --no-binary :all: argon2-cffi==${{ github.event.inputs.version }}'
    - uses: actions/upload-artifact@v2
      with:
        name: wheels-macos-${{ matrix.name }}
        path: dist/*.whl
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
        - name: cp27-x86
          py: "2.7"
          arch: x86
        - name: cp27-x64
          py: "2.7"
          arch: x64
        - name: cp35-x86
          py: "3.5"
          arch: x86
        - name: cp35-x64
          py: "3.5"
          arch: x64
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.py }}
        architecture: ${{ matrix.arch }}
    - run: choco install vcpython27
      if: matrix.py == 2.7
    - run: python -m pip install --upgrade pip setuptools wheel
    - run: 'python -m pip wheel --no-deps --wheel-dir dist --no-binary :all: argon2-cffi==${{ github.event.inputs.version }}'
    - uses: actions/upload-artifact@v2
      with:
        name: wheels-windows-${{ matrix.name }}
        path: dist/*.whl
